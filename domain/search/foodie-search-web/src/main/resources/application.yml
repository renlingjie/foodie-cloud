server:
  port: 10007

spring:
  application:
    name: foodie-search-service
  datasource:
    type: com.zaxxer.hikari.HikariDataSource # 数据源类型：HikariCP
    driver-class-name: com.mysql.cj.jdbc.Driver # mysql驱动
    url: jdbc:mysql://localhost:3306/foodMart?useUnicode=true&characterEncoding=UTF-8&autoReconnect
    username: root
    password: root1234
#  redis:
#      database: 1   #database数量，16以内，默认是0
#      host: 192.168.218.22   #我们所使用的Redis所在的主机地址，这虚拟机的，若是我们的本机那就是127.0.0.1
#      port: 6379
#      timeout: 500
#      password: rlj
  # Sleuth+Zipkin，完成对User微服务的日志的埋点，并将日志发送给Zipkin统计、展示
  # !!!因为一旦模块使用Bus刷新配置，依赖引入了bus-amqp，Sleuth智能的识别出来了，然后将默认的通过Web给Zipkin发送日志
  # 的方式换成RabbitMq了，这样Zipkin默认是使用Web接收的，自然接收不到任何信息。所以这里指定Sleuth发送方式为Web
#  zipkin:
#    discovery-client-enabled: true
#    # Zipkin通过Eureka高可用后，可以通过服务发现来定位，这样base-url就不用写具体的IP了
#    base-url: http://ZIPKIN-SERVER/
#    locator:
#      discovery:
#        enabled: true
#    # Sleuth以Web(Http)的形式给Zipkin发送日志
#    sender:
#      type: web
#  sleuth:
#    sampler:
#      probability: 1  # 采样率设置为1

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:20000/eureka/
      # defaultZone: http://82.156.233.44:20000/eureka/

management:
  # 暴露所有actuator接口，且不需要security检查(当然也可以指定需要暴露的接口)
  endpoints:
    web:
      exposure:
        include: '*'
  # 将所有信息毫无保留的，全部暴露出去
  endpoint:
    health:
      show-details: always

