server:
  port: 10007

spring:
  datasource: # 数据源的相关配置(微服务注意：每个服务都应该有对应的数据源)
    url: jdbc:mysql://localhost:3306/foodMart?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
  # ES连接信息，配置ES集群名称和集群下的节点，这里就一个，节点之间用的是TCP(ES对应9300)
  data:
    elasticsearch:
      cluster-name: rlj-elasticsearch
      cluster-nodes: 192.168.218.14:9300
  # actuator对ES健康检查会报错Connection refused，所以需要指定节点的Http(ES对应9200)连接信息
  # 或者直接关闭对ES的健康检查：management.health.elasticsearch.enabled=false
  elasticsearch:
    rest:
      uris: ["http://192.168.218.14:9200"]
  # Sleuth+Zipkin，完成对User微服务的日志的埋点，并将日志发送给Zipkin统计、展示
  # !!!因为一旦模块使用Bus刷新配置，依赖引入了bus-amqp，Sleuth智能的识别出来了，然后将默认的通过Web给Zipkin发送日志
  # 的方式换成RabbitMq了，这样Zipkin默认是使用Web接收的，自然接收不到任何信息。所以这里指定Sleuth发送方式为Web
  zipkin:
    discovery-client-enabled: true
    # Zipkin通过Eureka高可用后，可以通过服务发现来定位，这样base-url就不用写具体的IP了
    base-url: http://ZIPKIN-SERVER/
    locator:
      discovery:
        enabled: true
    # Sleuth以Web(Http)的形式给Zipkin发送日志
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1  # 采样率设置为1


